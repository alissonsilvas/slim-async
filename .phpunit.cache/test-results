{"version":2,"defects":{"Tests\\Unit\\MongoConnectionUnitTest::testCollectionMethodReturnsCollection":5,"Tests\\Unit\\MongoConnectionUnitTest::testCollectionMethodCallsClientWithCorrectParameters":5,"Tests\\Unit\\MongoConnectionUnitTest::testCanHandleMultipleCollectionCalls":5,"Tests\\Integration\\MongoConnectionTest::testCanCreateConnection":5,"Tests\\Integration\\MongoConnectionTest::testCanGetCollection":5,"Tests\\Integration\\MongoConnectionTest::testCanInsertAndFindDocument":5,"Tests\\Integration\\MongoConnectionTest::testCanUpdateDocument":5,"Tests\\Integration\\MongoConnectionTest::testCanDeleteDocument":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldCreateUserWithValidData":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateUsername":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateEmail":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateDocument":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateMultipleFields":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateUpdatedAtWhenModified":5,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldConvertToArray":5,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldReturnCorrectLengthForCPF":5,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldReturnCorrectLengthForCNPJ":5,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldHaveCorrectStringValues":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCreateValidCPF":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCreateValidCNPJ":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCleanNonNumericCharacters":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCPFLength":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCNPJLength":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCPF":5,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCNPJ":5,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldCreateEmailWithValidFormat":5,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldThrowExceptionForInvalidEmail":5,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldThrowExceptionForEmptyEmail":5,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldReturnTrueForEqualEmails":5,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldReturnFalseForDifferentEmails":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldCreateUsernameWithValidFormat":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldCreateUsernameWithNumbersAndUnderscores":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForTooShortUsername":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForTooLongUsername":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForInvalidCharacters":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldReturnTrueForEqualUsernames":5,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldReturnFalseForDifferentUsernames":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldSaveAndFindUserById":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindUserByEmail":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindUserByUsername":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldReturnNullForNonExistentUser":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldDeleteUser":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldReturnFalseWhenDeletingNonExistentUser":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldCheckEmailExists":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldCheckUsernameExists":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindAllUsersWithPagination":5,"Tests\\Integration\\MongoUserRepositoryTest::testShouldUpdateExistingUser":5,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnBasicHealthCheck":7,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnDetailedHealthCheck":8,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnMongoHealthCheckWhenConnected":8,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnAsyncHealthCheck":8,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldHandleMongoConnectionError":7,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnCorrectContentTypes":5,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnValidJsonResponses":7,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldCreateUserViaEndpoint":7,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnValidationErrorForInvalidUserData":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnConflictForDuplicateEmail":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldGetUserByIdViaEndpoint":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnNotFoundForNonExistentUser":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldUpdateUserViaEndpoint":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldDeleteUserViaEndpoint":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldListUsersWithPaginationViaEndpoint":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldHandleInvalidJsonInRequest":8,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldValidatePaginationParameters":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldCreateUserSuccessfully":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldReturnValidationErrorForInvalidData":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldGetUserByIdSuccessfully":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldReturnNotFoundForNonExistentUser":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldUpdateUserSuccessfully":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldDeleteUserSuccessfully":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldListUsersWithPagination":8,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldHandleInvalidJsonData":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCreateUserInDatabase":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldFindUserById":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldFindUserByEmail":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldUpdateUser":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldDeleteUser":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldListUsersWithPagination":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCheckEmailExists":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCheckUsernameExists":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldHandleDuplicateEmail":8,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldConvertUserToArray":8,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCreateAndFindUser":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldFindUserByUsername":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldListUsers":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldDeleteUser":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCheckEmailExists":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCheckUsernameExists":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldHandlePagination":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCreateUserWithCNPJ":5,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldConvertUserToArray":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldCreateUserViaHttpPost":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldReturnValidationErrorForInvalidData":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldGetUserByIdViaHttpGet":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldReturnNotFoundForNonExistentUser":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldUpdateUserViaHttpPut":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldDeleteUserViaHttpDelete":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldListUsersViaHttpGet":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldHandleInvalidJsonInRequest":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldValidatePaginationParameters":5,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldCreateUserWithCNPJ":5,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveCreateUserUseCaseInterface":5,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveGetUserUseCaseInterface":5,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveUpdateUserUseCaseInterface":5,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveDeleteUserUseCaseInterface":5,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveListUsersUseCaseInterface":5,"Tests\\Integration\\Endpoints\\RouteFactoryTest::testShouldResolveCreateUserUseCaseInterfaceFromContainer":5,"Tests\\Integration\\Endpoints\\DebugRouteFactoryTest::testShouldDebugContainerResolution":5,"Tests\\Integration\\Endpoints\\RouteFactoryDebugTest::testShouldDebugRouteFactoryParameters":5,"Tests\\Integration\\Endpoints\\DebugHttpTest::testDebugCreateUser":5,"Tests\\Integration\\Endpoints\\DebugHttpTest::testDebugGetUser":5,"Tests\\Integration\\Endpoints\\SimpleDebugTest::testDebugUseCase":5},"times":{"Tests\\Unit\\MongoConnectionUnitTest::testCollectionMethodReturnsCollection":0,"Tests\\Unit\\MongoConnectionUnitTest::testCollectionMethodCallsClientWithCorrectParameters":0.001,"Tests\\Unit\\MongoConnectionUnitTest::testCanHandleMultipleCollectionCalls":0,"Tests\\Integration\\MongoConnectionTest::testCanCreateConnection":0,"Tests\\Integration\\MongoConnectionTest::testCanGetCollection":0,"Tests\\Integration\\MongoConnectionTest::testCanInsertAndFindDocument":0.001,"Tests\\Integration\\MongoConnectionTest::testCanUpdateDocument":0.002,"Tests\\Integration\\MongoConnectionTest::testCanDeleteDocument":0.001,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldCreateUserWithValidData":0.001,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateUsername":0,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateEmail":0.004,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateDocument":0,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateMultipleFields":0,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldUpdateUpdatedAtWhenModified":0.001,"Tests\\Unit\\Domain\\Entities\\UserTest::testShouldConvertToArray":0,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldReturnCorrectLengthForCPF":0,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldReturnCorrectLengthForCNPJ":0,"Tests\\Unit\\Domain\\Enums\\DocumentTypeTest::testShouldHaveCorrectStringValues":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCreateValidCPF":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCreateValidCNPJ":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldCleanNonNumericCharacters":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCPFLength":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCNPJLength":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCPF":0,"Tests\\Unit\\Domain\\ValueObjects\\DocumentTest::testShouldThrowExceptionForInvalidCNPJ":0,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldCreateEmailWithValidFormat":0,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldThrowExceptionForInvalidEmail":0,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldThrowExceptionForEmptyEmail":0,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldReturnTrueForEqualEmails":0,"Tests\\Unit\\Domain\\ValueObjects\\EmailTest::testShouldReturnFalseForDifferentEmails":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldCreateUsernameWithValidFormat":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldCreateUsernameWithNumbersAndUnderscores":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForTooShortUsername":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForTooLongUsername":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldThrowExceptionForInvalidCharacters":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldReturnTrueForEqualUsernames":0,"Tests\\Unit\\Domain\\ValueObjects\\UsernameTest::testShouldReturnFalseForDifferentUsernames":0,"Tests\\Integration\\MongoUserRepositoryTest::testShouldSaveAndFindUserById":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindUserByEmail":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindUserByUsername":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldReturnNullForNonExistentUser":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldDeleteUser":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldReturnFalseWhenDeletingNonExistentUser":0,"Tests\\Integration\\MongoUserRepositoryTest::testShouldCheckEmailExists":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldCheckUsernameExists":0.001,"Tests\\Integration\\MongoUserRepositoryTest::testShouldFindAllUsersWithPagination":0.002,"Tests\\Integration\\MongoUserRepositoryTest::testShouldUpdateExistingUser":0.001,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnBasicHealthCheck":0.005,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnDetailedHealthCheck":0,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnMongoHealthCheckWhenConnected":0.011,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnAsyncHealthCheck":0.01,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldHandleMongoConnectionError":0.004,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnCorrectContentTypes":0.011,"Tests\\Integration\\Endpoints\\HealthEndpointsTest::testShouldReturnValidJsonResponses":0,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldCreateUserViaEndpoint":0.002,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnValidationErrorForInvalidUserData":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnConflictForDuplicateEmail":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldGetUserByIdViaEndpoint":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldReturnNotFoundForNonExistentUser":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldUpdateUserViaEndpoint":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldDeleteUserViaEndpoint":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldListUsersWithPaginationViaEndpoint":0.001,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldHandleInvalidJsonInRequest":0,"Tests\\Integration\\Endpoints\\UserEndpointsTest::testShouldValidatePaginationParameters":0.001,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldCreateUserSuccessfully":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldReturnValidationErrorForInvalidData":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldGetUserByIdSuccessfully":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldReturnNotFoundForNonExistentUser":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldUpdateUserSuccessfully":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldDeleteUserSuccessfully":0,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldListUsersWithPagination":0.001,"Tests\\Integration\\Presentation\\UserControllerTest::testShouldHandleInvalidJsonData":0,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCreateUserInDatabase":0.008,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldFindUserById":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldFindUserByEmail":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldUpdateUser":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldDeleteUser":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldListUsersWithPagination":0,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCheckEmailExists":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldCheckUsernameExists":0.001,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldHandleDuplicateEmail":0,"Tests\\Integration\\Endpoints\\SimpleUserEndpointsTest::testShouldConvertUserToArray":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCreateAndFindUser":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldFindUserByUsername":0.007,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldListUsers":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldDeleteUser":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCheckEmailExists":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCheckUsernameExists":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldHandlePagination":0.002,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldCreateUserWithCNPJ":0.001,"Tests\\Integration\\Endpoints\\BasicUserTest::testShouldConvertUserToArray":0.001,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldCreateUserViaHttpPost":0.005,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldReturnValidationErrorForInvalidData":0.001,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldGetUserByIdViaHttpGet":0.002,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldReturnNotFoundForNonExistentUser":0.001,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldUpdateUserViaHttpPut":0.002,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldDeleteUserViaHttpDelete":0.002,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldListUsersViaHttpGet":0.002,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldHandleInvalidJsonInRequest":0.004,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldValidatePaginationParameters":0.001,"Tests\\Integration\\Endpoints\\HttpUserEndpointsTest::testShouldCreateUserWithCNPJ":0.001,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveCreateUserUseCaseInterface":0.003,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveGetUserUseCaseInterface":0,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveUpdateUserUseCaseInterface":0,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveDeleteUserUseCaseInterface":0,"Tests\\Integration\\Endpoints\\ContainerTest::testShouldResolveListUsersUseCaseInterface":0,"Tests\\Integration\\Endpoints\\RouteFactoryTest::testShouldResolveCreateUserUseCaseInterfaceFromContainer":0.003,"Tests\\Integration\\Endpoints\\DebugRouteFactoryTest::testShouldDebugContainerResolution":0.003,"Tests\\Integration\\Endpoints\\RouteFactoryDebugTest::testShouldDebugRouteFactoryParameters":0.004,"Tests\\Integration\\Endpoints\\DebugHttpTest::testDebugCreateUser":0.01,"Tests\\Integration\\Endpoints\\DebugHttpTest::testDebugGetUser":0.003,"Tests\\Integration\\Endpoints\\SimpleDebugTest::testDebugUseCase":0.011}}